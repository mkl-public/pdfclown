<?xml version="1.0" encoding="utf-8"?>
<changeLog name="changes" version="0.1.0" xml:lang="en"
  xmlns="http://www.stefanochizzolini.it/ns/mentor" nsVersion="0.1"
  xmlns:db="http://docbook.org/ns/docbook" db:version="5.0"
  xmlns:xl="http://www.w3.org/1999/xlink"
  >
  <meta>
    <date>2011-02-24</date>
    <!--
      'revision' is the current revision of this metadocumentation.
      Its value should be an incremental counter anchored to the project version,
      i.e. it should be reset to zero everytime a new project version is created.
    -->
    <revision>0</revision>
    <author>
      <name>
        <first>Stefano</first>
        <last>Chizzolini</last>
      </name>
      <contact type="url">http://www.stefanochizzolini.it</contact>
    </author>
  </meta>
  <title>PDF Clown Project</title>
  <description>
    <db:para>This is a coarsely-grained record of major changes occurred to the <db:emphasis role="strong">PDF Clown Project</db:emphasis>, from a systematic point of view.</db:para>
    <db:para>For a more concise list of changes, please see the <db:link xl:href="WHATSNEW.html">WHATSNEW</db:link>.</db:para>
  </description>
  <tip>Change chronology of the PDF Clown Project</tip>
  <keywords>PDF, PDF Clown, library, project, changes</keywords>
  <features>
    <feature id="org.pdfclown">
      <title>Main (org.pdfclown)</title>
    </feature>
    <feature id="org.pdfclown.bytes">
      <title>Byte Streaming (org.pdfclown.bytes)</title>
    </feature>
    <feature id="org.pdfclown.tokens">
      <title>File Serialization (org.pdfclown.tokens)</title>
    </feature>
    <feature id="org.pdfclown.objects">
      <title>Primitive Objects (org.pdfclown.objects)</title>
    </feature>
    <feature id="org.pdfclown.files">
      <title>File Structure (org.pdfclown.files)</title>
    </feature>
    <feature id="org.pdfclown.documents">
      <title>Document Structure (org.pdfclown.documents)</title>
    </feature>
    <feature id="org.pdfclown.documents.contents">
      <title>Content Streaming (org.pdfclown.documents.contents)</title>
    </feature>
    <feature id="org.pdfclown.documents.interaction">
      <title>Interaction (org.pdfclown.documents.interaction)</title>
    </feature>
    <feature id="org.pdfclown.tools">
      <title>Tools (org.pdfclown.tools)</title>
    </feature>
    <feature id="it.stefanochizzolini.clown:ANY">
      <title>General</title>
    </feature>
    <feature id="it.stefanochizzolini.clown.byteStreaming">
      <title>Byte Streaming (it.stefanochizzolini.clown.byteStreaming)</title>
    </feature>
    <feature id="it.stefanochizzolini.clown.serialization">
      <title>Serialization (it.stefanochizzolini.clown.serialization)</title>
    </feature>
    <feature id="it.stefanochizzolini.clown.objects">
      <title>Primitive Objects (it.stefanochizzolini.clown.objects)</title>
    </feature>
    <feature id="it.stefanochizzolini.clown.fileStructure">
      <title>File Structure (it.stefanochizzolini.clown.fileStructure)</title>
    </feature>
    <feature id="it.stefanochizzolini.clown.documentStructure">
      <title>Document Structure (it.stefanochizzolini.clown.documentStructure)</title>
    </feature>
    <feature id="it.stefanochizzolini.clown.interchange">
      <title>Interchange (it.stefanochizzolini.clown.interchange)</title>
    </feature>
    <feature id="it.stefanochizzolini.clown.interaction">
      <title>Interaction (it.stefanochizzolini.clown.interaction)</title>
    </feature>
    <feature id="it.stefanochizzolini.clown.contentStreaming">
      <title>Content Streaming (it.stefanochizzolini.clown.contentStreaming)</title>
    </feature>
    <feature id="it.stefanochizzolini.clown.bytes">
      <title>Byte Streaming (it.stefanochizzolini.clown.bytes)</title>
    </feature>
    <feature id="it.stefanochizzolini.clown.tokens">
      <title>Serialization (it.stefanochizzolini.clown.tokens)</title>
    </feature>
    <feature id="it.stefanochizzolini.clown.files">
      <title>File Structure (it.stefanochizzolini.clown.files)</title>
    </feature>
    <feature id="it.stefanochizzolini.clown.documents">
      <title>Document Structure (it.stefanochizzolini.clown.documents)</title>
    </feature>
    <feature id="it.stefanochizzolini.clown.documents.interchange">
      <title>Interchange (it.stefanochizzolini.clown.documents.interchange)</title>
    </feature>
    <feature id="it.stefanochizzolini.clown.documents.interaction">
      <title>Interaction (it.stefanochizzolini.clown.documents.interaction)</title>
    </feature>
    <feature id="it.stefanochizzolini.clown.documents.contents">
      <title>Content Streaming (it.stefanochizzolini.clown.documents.contents)</title>
    </feature>
    <feature id="it.stefanochizzolini.clown.tools">
      <title>Tools (it.stefanochizzolini.clown.tools)</title>
    </feature>
  </features>
  <entries>
    <release version="0.1.0" date="2011-02-24" compatible="false">
      <description>
        <db:para>This release introduces support to <db:emphasis role="strong">cross-reference-stream-based PDF files</db:emphasis> (as defined since PDF 1.5 spec) along with <db:emphasis role="strong"><db:link xl:href="http://pdfclown.wordpress.com/2010/09/23/waiting-for-pdf-clown-0-1-release/">page rendering and printing</db:link></db:emphasis>: a specialized tool provides a convenient way to convert PDF pages into images (aka rasterization).</db:para>
        <db:para>Lots of minor improvements have been applied too.</db:para>
      </description>
      <feature idref="org.pdfclown">
        <entries>
          <add>annotation PDF</add>
          <add>class Version</add>
          <add>enum VersionEnum</add>
        </entries>
      </feature>
      <feature idref="org.pdfclown.tokens">
        <entries>
          <add>class CompressedWriter: xref-stream-based serialization.</add>
          <add>class Encoding: file encoding.</add>
          <add>class ObjectStream</add>
          <add>class PlainWriter: plain-xref-table-based serialization.</add>
          <add>class XRefStream</add>
          <change>class Parser: support to ObjectStream and XRefStream; support to hex PdfTextString.</change>
          <change>class Reader: support to xref-stream-based files.</change>
          <change>class Writer: generalization to support xref-stream-based serialization.</change>
          <change>class XRefEntry: support to xref-stream-based files.</change>
        </entries>
      </feature>
      <feature idref="org.pdfclown.bytes">
        <entries>
          <change><text>class filters.FlateFilter:</text>
            <entries>
              <add>private decodePredictor(byte[],PdfDictionary): supports filter predictors.</add>
            </entries>
          </change>
        </entries>
      </feature>
      <feature idref="org.pdfclown.objects">
        <entries>
          <add>class PdfNumber</add>
          <change><text>class PdfIndirectObject:</text>
            <entries>
              <add>compress(PdfIndirectObject objectStreamIndirectObject), uncompress(): support to object streams.</add>
            </entries>
          </change>
          <change>class PdfInteger: PdfNumber derivation.</change>
          <change><text>class PdfObjectWrapper:</text>
            <entries>
              <add>checkCompatibility(Object feature): version compatibility check.</add>
            </entries>
          </change>
          <change>class PdfReal: PdfNumber derivation.</change>
          <change>class PdfTextString: hex serialization mode support.</change>
          <change>class Rectangle: coordinate revision.</change>
        </entries>
      </feature>
      <feature idref="org.pdfclown.files">
        <entries>
          <change><text>class File:</text>
            <entries>
              <add>save(...): renamed from writeTo(...).</add>
              <remove>writeTo(...): renamed to save(...).</remove>
            </entries>
          </change>
        </entries>
      </feature>
      <feature idref="org.pdfclown.documents">
        <entries>
          <add>class NamedJavaScripts</add>
          <add>class functions.Function</add>
          <add>class functions.Functions</add>
          <add>class functions.Type0Function</add>
          <add>class functions.Type2Function</add>
          <add>class functions.Type3Function</add>
          <add>class functions.Type4Function</add>
          <change><text>class Document:</text>
            <entries>
              <add>class Configuration</add>
              <add>enum PageLayoutEnum: consolidated from PageLayoutEnum</add>
              <add>enum PageModeEnum: consolidated from PageModeEnum</add>
              <add>support for printing</add>
              <change>getVersion: Version return type.</change>
            </entries>
          </change>
          <change><text>class Names:</text>
            <entries>
              <add>get/setJavaScripts(NamedJavaScripts value)</add>
            </entries>
          </change>
          <change><text>class Page:</text>
            <entries>
              <add>print(Graphics graphics, PageFormat pageFormat, int pageIndex): support for printing.</add>
              <add>render(Graphics2D context, Dimension2D size): support for rendering.</add>
            </entries>
          </change>
          <remove>enum PageLayoutEnum: consolidated into Document</remove>
          <remove>enum PageModeEnum: consolidated into Document</remove>
        </entries>
      </feature>
      <feature idref="org.pdfclown.documents.interaction">
        <entries>
          <add>class annotations.Movie: renamed from annotations.MovieAnnotation</add>
          <add>class annotations.Sound: renamed from annotations.SoundAnnotation</add>
          <change><text>class navigation.document.Bookmark:</text>
            <entries>
              <add>enum FlagsEnum</add>
              <add>get/setColor(DeviceRGBColor value)</add>
              <add>get/setFlags(EnumSet value)</add>
            </entries>
          </change>
          <remove>class annotations.MovieAnnotation: renamed to annotations.Movie</remove>
          <remove>class annotations.SoundAnnotation: renamed to annotations.Sound</remove>
        </entries>
      </feature>
      <feature idref="org.pdfclown.documents.contents">
        <entries>
          <add>class PatternResources</add>
          <add>class PropertyList</add>
          <add>class PropertyListResources</add>
          <add>class ResourceItems</add>
          <add>class RotationEnum</add>
          <add>class ShadingResources</add>
          <add>class WindModeEnum</add>
          <add>class colorSpaces.CalColorSpace</add>
          <add>class colorSpaces.CalGrayColor</add>
          <add>class colorSpaces.CalRGBColor</add>
          <add>class colorSpaces.DeviceNColor</add>
          <add>class colorSpaces.DeviceNColorSpace</add>
          <add>class colorSpaces.IndexedColor</add>
          <add>class colorSpaces.IndexedColorSpace</add>
          <add>class colorSpaces.LabColor</add>
          <add>class colorSpaces.LeveledColor</add>
          <add>class colorSpaces.Pattern</add>
          <add>class colorSpaces.PatternColorSpace</add>
          <add>class colorSpaces.SeparationColor</add>
          <add>class colorSpaces.SeparationColorSpace</add>
          <add>class colorSpaces.Shading</add>
          <add>class colorSpaces.ShadingPattern</add>
          <add>class colorSpaces.SpecialColorSpace</add>
          <add>class colorSpaces.SpecialDeviceColorSpace</add>
          <add>class colorSpaces.TilingPattern</add>
          <add>class composition.BlockComposer: renamed from composition.BlockFilter</add>
          <add>class composition.PrimitiveComposer: renamed from composition.PrimitiveFilter</add>
          <add>class objects.ContentMarker</add>
          <add>class objects.MarkedContentPoint</add>
          <add>class objects.SetDeviceCMYKFillColor</add>
          <add>class objects.SetDeviceCMYKStrokeColor</add>
          <add>class objects.SetDeviceGrayFillColor</add>
          <add>class objects.SetDeviceGrayStrokeColor</add>
          <add>class objects.SetDeviceRGBFillColor</add>
          <add>class objects.SetDeviceRGBStrokeColor</add>
          <change>class ColorSpaceResources: ResourceItems derivation</change>
          <change><text>class ContentScanner:</text>
            <entries>
              <add>getCanvasSize()</add>
              <add>getRenderContext()</add>
              <add>getRenderObject()</add>
              <add>render(Graphics2D, Dimension2D)</add>
              <add>render(Graphics2D, Dimension2D, Shape)</add>
            </entries>
          </change>
          <change>class ExtGState</change>
          <change>class ExtGStateResources: ResourceItems derivation.</change>
          <change>class FontResources: ResourceItems derivation.</change>
          <change><text>interface IContentContext:</text>
            <entries>
              <add>getRotation()</add>
              <add>render(Graphics2D context, Dimension2D size)</add>
            </entries>
          </change>
          <change><text>class Resources:</text>
            <entries>
              <add>get/setPatterns(PatternResources value)</add>
              <add>get/setPropertyLists(PropertyListResources value)</add>
              <add>get/setShadings(ShadingResources value)</add>
            </entries>
          </change>
          <change>class XObjectResources: ResourceItems derivation.</change>
          <change>class colorSpaces.CalGrayColorSpace</change>
          <change>class colorSpaces.CalRGBColorSpace</change>
          <change>class colorSpaces.CIEBasedColorSpace</change>
          <change>class colorSpaces.Color</change>
          <change>class colorSpaces.ColorSpace</change>
          <change>class colorSpaces.DeviceCMYKColor</change>
          <change>class colorSpaces.DeviceCMYKColorSpace</change>
          <change>class colorSpaces.DeviceColor</change>
          <change>class colorSpaces.DeviceColorSpace</change>
          <change>class colorSpaces.DeviceGrayColor</change>
          <change>class colorSpaces.DeviceGrayColorSpace</change>
          <change>class colorSpaces.DeviceRGBColor</change>
          <change>class colorSpaces.DeviceRGBColorSpace</change>
          <change>class colorSpaces.ICCBasedColorSpace</change>
          <change>class colorSpaces.LabColorSpace</change>
          <change>class objects.BeginMarkedContent: ContentMarker derivation.</change>
          <change>class objects.BeginSubpath: support to rendering.</change>
          <change>class objects.CloseSubpath: support to rendering.</change>
          <change>class objects.CompositeObject: support to rendering.</change>
          <change><text>class objects.ContentObject:</text>
            <entries>
              <add>scan(ContentScanner.GraphicsState state)</add>
              <remove>applyTo(ContentScanner.GraphicsState state)</remove>
            </entries>
          </change>
          <change>class objects.DrawCurve: support to rendering.</change>
          <change>class objects.DrawLine: support to rendering.</change>
          <change>class objects.DrawRectangle: support to rendering.</change>
          <change>class objects.LocalGraphicsState: support to rendering.</change>
          <change>class objects.ModifyClipPath: support to rendering.</change>
          <change>class objects.ModifyCTM: support to rendering.</change>
          <change>class objects.PaintPath: paint-path-related operations consolidation; support to rendering.</change>
          <change><text>class objects.PaintShading:</text>
            <entries>
              <add>get/setName(PdfName value)</add>
              <add>getShading(IContentContext context)</add>
            </entries>
          </change>
          <change><text>class objects.PaintXObject:</text>
            <entries>
              <add>getXObject(IContentContext context)</add>
            </entries>
          </change>
          <change>class objects.Path: support to rendering.</change>
          <change>class objects.SetCharSpace: support to rendering.</change>
          <change><text>class objects.SetExtGState:</text>
            <entries>
              <add>getExtGState(IContentContext context)</add>
            </entries>
          </change>
          <change>class objects.SetFillColor: support to rendering.</change>
          <change>class objects.SetFillColorSpace: support to rendering.</change>
          <change>class objects.SetFont: support to rendering.</change>
          <change>class objects.SetLineCap: support to rendering.</change>
          <change>class objects.SetLineDash: support to rendering.</change>
          <change>class objects.SetLineJoin: support to rendering.</change>
          <change>class objects.SetLineWidth: support to rendering.</change>
          <change>class objects.SetMiterLimit: support to rendering.</change>
          <change>class objects.SetStrokeColor: support to rendering.</change>
          <change>class objects.SetStrokeColorSpace: support to rendering.</change>
          <change>class objects.SetTextLead: support to rendering.</change>
          <change>class objects.SetTextMatrix: support to rendering.</change>
          <change>class objects.SetTextRenderMode: support to rendering.</change>
          <change>class objects.SetTextRise: support to rendering.</change>
          <change>class objects.SetTextScale: support to rendering.</change>
          <change>class objects.SetWordSpace: support to rendering.</change>
          <change><text>class objects.Shading:</text>
            <entries>
              <add>getName()</add>
              <add>getResource(IContentContext context)</add>
            </entries>
          </change>
          <change>class objects.ShowText: support to rendering.</change>
          <change>class objects.TranslateTextRelative: support to rendering.</change>
          <change>class objects.TranslateTextToNextLine: support to rendering.</change>
          <change><text>class objects.XObject:</text>
            <entries>
              <add>getResource(IContentContext context)</add>
            </entries>
          </change>
          <change>class xObjects.FormXObject: support to rendering.</change>
          <remove>class composition.BlockFilter: renamed to composition.BlockComposer</remove>
          <remove>class composition.PrimitiveFilter: renamed to composition.PrimitiveComposer</remove>
          <remove>class objects.CloseFillStroke: consolidated into objects.PaintPath</remove>
          <remove>class objects.CloseFillStrokeEvenOdd: consolidated into objects.PaintPath</remove>
          <remove>class objects.CloseStroke: consolidated into objects.PaintPath</remove>
          <remove>class objects.EndPathNoOp: consolidated into objects.PaintPath</remove>
          <remove>class objects.Fill: consolidated into objects.PaintPath</remove>
          <remove>class objects.FillEvenOdd: consolidated into objects.PaintPath</remove>
          <remove>class objects.FillStroke: consolidated into objects.PaintPath</remove>
          <remove>class objects.FillStrokeEvenOdd: consolidated into objects.PaintPath</remove>
          <remove>class objects.ModifyClipPathEvenOdd: consolidated into objects.PaintPath</remove>
          <remove>class objects.Stroke: consolidated into objects.PaintPath</remove>
        </entries>
      </feature>
      <feature idref="org.pdfclown.tools">
        <entries>
          <add>class Renderer: document renderer and printer.</add>
          <change><text>class PageManager:</text>
            <entries>
              <add>getSize(Page page), getSize(Page page, Set visitedReferences): page size calculation.</add>
              <add>split(int... indexes): splits the document into multiple subdocuments delimited by the specified page indexes.</add>
              <add>split(long maxDataSize): splits the document into multiple subdocuments on maximum file size.</add>
            </entries>
          </change>
        </entries>
      </feature>
    </release>
    <release version="0.0.8" date="2010-08-21" compatible="false">
      <description>
        <db:para>This release is focused on <db:emphasis role="strong"><db:link xl:href="http://pdfclown.wordpress.com/2010/01/02/upcoming-0-0-8-whats-going-to-be-new/">text extraction</db:link></db:emphasis> support: a specialized tool provides, along with plain-text extraction, advanced functionalities such as full graphic state of extracted text (font, font size, text color, text rendering mode, text position...), text filtering by area, text grouping and sorting.</db:para>
        <db:para>Lots of minor improvements have been applied too.</db:para>
      </description>
      <feature idref="it.stefanochizzolini.clown.bytes">
        <entries>
          <add>class filters.ASCII85Filter</add>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.files">
        <entries>
          <change><text>class File:</text>
            <entries>
              <add>save(),save(SerializationModeEnum): saves the PDF file overwriting the existing file-system file.</add>
            </entries>
          </change>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.objects">
        <entries>
          <add>class PdfNamedObjectWrapper: named object base class.</add>
          <add>class Rectangle: as a derivative structure (like NameTree), it inherits from PdfObjectWrapper.</add>
          <change>class NameTree: B-tree algorithm support added.</change>
          <change><text>class PdfArray:</text>
            <entries>
              <add>resolve(int): provides direct reference resolution of the requested array item.</add>
            </entries>
          </change>
          <change><text>class PdfDictionary:</text>
            <entries>
              <add>resolve(PdfName): provides direct reference resolution of the requested dictionary item.</add>
            </entries>
          </change>
          <change><text>class PdfDirectObject:</text>
            <entries>
              <add>Comparable implementation.</add>
            </entries>
          </change>
          <remove>class PdfRectangle: substituted by Rectangle, in order to harmonize with other derivative structures like NameTree.</remove>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.documents">
        <entries>
          <add>class interaction.actions.GoToDestination: base go-to destination model.</add>
          <add>class interaction.actions.GoToNonLocal: base go-to-nonlocal destination model.</add>
          <add>interface interaction.actions.IGoToAction: marker interface for go-to-like actions.</add>
          <add>interface interaction.ILink: generic link interface.</add>
          <change><text>class Names:</text>
            <entries>
              <add>resolve(PdfString)</add>
            </entries>
          </change>
          <change><text>class filespecs.FileSpec:</text>
            <entries>
              <add>get/setFilename(),get/setMacFilename(),get/setUnixFilename(),get/setWinFilename(): renamed from get/setName(),get/setMacName(),get/setUnixName(),get/setWinName().</add>
              <change>NamedObjectWrapper derivation.</change>
              <remove>get/setName(),get/setMacName(),get/setUnixName(),get/setWinName(): renamed to get/setFilename(),get/setMacFilename(),get/setUnixFilename(),get/setWinFilename().</remove>
            </entries>
          </change>
          <change><text>class interaction.actions.GoTo3dView:</text>
            <entries>
              <add>IGoToAction implementation.</add>
            </entries>
          </change>
          <change><text>class interaction.actions.GoToEmbedded:</text>
            <entries>
              <change>GoToNonLocal derivation.</change>
            </entries>
          </change>
          <change><text>class interaction.actions.GoToFirstPage:</text>
            <entries>
              <add>IGoToAction implementation.</add>
            </entries>
          </change>
          <change><text>class interaction.actions.GoToLastPage:</text>
            <entries>
              <add>IGoToAction implementation.</add>
            </entries>
          </change>
          <change><text>class interaction.actions.GoToLocal:</text>
            <entries>
              <change>GoToDestination derivation.</change>
            </entries>
          </change>
          <change><text>class interaction.actions.GoToNextPage:</text>
            <entries>
              <add>IGoToAction implementation.</add>
            </entries>
          </change>
          <change><text>class interaction.actions.GoToPreviousPage:</text>
            <entries>
              <add>IGoToAction implementation.</add>
            </entries>
          </change>
          <change><text>class interaction.actions.GoToRemote:</text>
            <entries>
              <change>GoToNonLocal derivation.</change>
            </entries>
          </change>
          <change><text>class interaction.actions.GoToThread:</text>
            <entries>
              <add>IGoToAction implementation.</add>
            </entries>
          </change>
          <change><text>class interaction.actions.GoToURI:</text>
            <entries>
              <add>IGoToAction implementation.</add>
            </entries>
          </change>
          <change><text>class interaction.annotations.AnnotationActions:</text>
            <entries>
              <add>Map implementation.</add>
            </entries>
          </change>
          <change><text>class interaction.annotations.Link:</text>
            <entries>
              <add>ILink implementation.</add>
            </entries>
          </change>
          <change><text>class interaction.navigation.document.Bookmark:</text>
            <entries>
              <add>ILink implementation.</add>
              <remove>get/setPreviousSibling(),get/setNextSibling(): interface normalization.</remove>
            </entries>
          </change>
          <change><text>class interaction.navigation.document.Destination:</text>
            <entries>
              <change>NamedObjectWrapper derivation.</change>
            </entries>
          </change>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.documents.contents">
        <entries>
          <add>class ExtGState</add>
          <add>class ExtGStateResources</add>
          <add>interface ITextString</add>
          <add>class TextChar</add>
          <add>class TextStyle</add>
          <add>class fonts.CompositeFont</add>
          <add>class fonts.SimpleFont</add>
          <add>class fonts.TrueTypeFont</add>
          <add>class fonts.Type0Font</add>
          <add>class fonts.Type2Font</add>
          <add>class objects.PaintShading</add>
          <add>class objects.SetExtGState</add>
          <add>class objects.Shading</add>
          <add>class objects.ShowAdjustedText</add>
          <add>class objects.ShowSimpleText</add>
          <add>class objects.ShowTextToNextLine</add>
          <change><text>class ContentScanner:</text>
            <entries>
              <add>getCurrentWrapper(): gets high-level information (text, image...) about the current content object.</add>
              <add>move(int): allows moving the cursor to an arbitrary position.</add>
              <add>moveEnd(): allows moving the cursor after the last content object.</add>
              <add>moveStart(): allows moving the cursor before the first content object.</add>
              <remove>getLeaf(),getLeafLevel(): discarded.</remove>
            </entries>
          </change>
          <change><text>class Resources:</text>
            <entries>
              <add>get/setExtGStates(ExtGStateResources): graphics state parameter dictionaries.</add>
            </entries>
          </change>
          <change><text>class objects.ContentObject:</text>
            <entries>
              <add>applyTo(ContentScanner.GraphicsState): applies the object's state to the specified graphics state.</add>
            </entries>
          </change>
          <change><text>class objects.InlineImage:</text>
            <entries>
              <add>getSize(): image size.</add>
            </entries>
          </change>
          <change><text>class objects.InlineImageHeader:</text>
            <entries>
              <add>Map implementation.</add>
            </entries>
          </change>
          <change><text>class objects.ModifyCTM:</text>
            <entries>
              <add>applyTo(ContentScanner.GraphicsState)</add>
              <add>getValue()</add>
              <remove>applyTo(double[]): substituted by applyTo(ContentScanner.GraphicsState).</remove>
              <remove>getMatrix(): substituted by getValue().</remove>
            </entries>
          </change>
          <change><text>class objects.SetTextMatrix:</text>
            <entries>
              <add>getValue()</add>
              <remove>getMatrix(): substituted by getValue().</remove>
            </entries>
          </change>
          <change>class objects.ShowText: abstract (text operation model has been expanded and refined).</change>
          <remove>class fonts.OpenTypeFont: substituted by Type2Font and TrueTypeFont.</remove>
          <remove>class objects.PaintShadingObject: substituted by PaintShading.</remove>
          <remove>class objects.ShadingObject: substituted by Shading.</remove>
        </entries>
      </feature>
    </release>
    <release version="0.0.7" date="2009-01-02" compatible="false">
      <description>
        <db:para>This release expands the support to <db:emphasis role="strong">interactive features</db:emphasis>: actions, annotations, acroforms, page-level navigation (transitions), improved document-level navigation (destinations), file specifications...</db:para>
        <db:para><db:emphasis role="strong">Path drawing model</db:emphasis> has been implemented, along with enhanced content scanning.</db:para>
      </description>
      <feature idref="it.stefanochizzolini.clown.tokens">
        <entries>
          <change><text>class XRefEntry:</text>
            <entries>
              <add>class UsageEnum</add>
            </entries>
          </change>
          <remove>class XRefEntryUsageEnum: substituted by XRefEntry.UsageEnum.</remove>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.files">
        <entries>
          <change><text>class File:</text>
            <entries>
              <fix id="0.0.6:1:SC">file lock is now appropriately released on object disposal. Symptom: after a file-system file was opened it kept being locked undefinitely. Cause: lack of explicit disposal.</fix>
            </entries>
          </change>
          <remove>class XRefEntryUsageEnum: substituted by XRefEntry.UsageEnum.</remove>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.objects">
        <entries>
          <add>class NameTree</add>
          <change><text>class IPdfIndirectObject:</text>
            <entries>
              <add>setDataObject(PdfDataObject): the data object associated to an indirect object can now be replaced.</add>
            </entries>
          </change>
          <remove>class PdfNameTree: substituted by NameTree.</remove>
          <remove>class PdfNull</remove>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.documents">
        <entries>
          <add>class DocumentActions</add>
          <add>class NamedDestinations</add>
          <add>class NamedEmbeddedFiles</add>
          <add>class PageActions</add>
          <add>class PageAnnotations</add>
          <add>class fileSpecs.EmbeddedFile</add>
          <add>class fileSpecs.FileSpec</add>
          <add>class fileSpecs.RelatedFiles</add>
          <add>class multimedia.Movie</add>
          <add>class multimedia.Sound</add>
          <change><text>class Document:</text>
            <entries>
              <add>get/setActions(): document actions.</add>
              <add>get/setForm(): acroform.</add>
              <add>get/setVersion()</add>
            </entries>
          </change>
          <change><text>class Page:</text>
            <entries>
              <add>get/setActions(): page actions.</add>
              <add>get/setAnnotations(): page annotations.</add>
              <add>get/setDuration()</add>
              <add>get/setTabOrder()</add>
              <add>get/setTransition()</add>
              <remove>getNext(): redundant (see Pages collection).</remove>
              <remove>getPage(int): redundant (see Pages collection).</remove>
              <remove>getPrevious(): redundant (see Pages collection).</remove>
            </entries>
          </change>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.documents.contents">
        <entries>
          <add>class ColorSpaceResources</add>
          <add>class FontResources</add>
          <add>class XObjectResources</add>
          <add>class objects.BeginMarkedContent</add>
          <add>class objects.BeginSubpath</add>
          <add>class objects.CloseFillStroke</add>
          <add>class objects.CloseFillStrokeEvenOdd</add>
          <add>class objects.CloseStroke</add>
          <add>class objects.CloseSubpath</add>
          <add>class objects.DrawCurve</add>
          <add>class objects.DrawLine</add>
          <add>class objects.EndMarkedContent</add>
          <add>class objects.EndPathNoOp</add>
          <add>class objects.FillEvenOdd</add>
          <add>class objects.FillStrokeEvenOdd</add>
          <add>class objects.MarkedContent</add>
          <add>class objects.ModifyClipPath</add>
          <add>class objects.ModifyClipPathEvenOdd</add>
          <add>class objects.PaintPath</add>
          <add>class objects.Path</add>
          <change><text>class ContentScanner:</text>
            <entries>
              <change>getCurrent(),moveFirst(),moveLast(),moveNext(),remove(),setCurrent(): revised implementation.</change>
              <remove>moveInnerNext(): consolidated into moveNext().</remove>
            </entries>
          </change>
          <change><text>class composition.PrimitiveFilter:</text>
            <entries>
              <add>beginMarkedContent(PdfName): marked content insertion.</add>
              <add>clip(): area clipping.</add>
              <add>closePath(): path closing.</add>
              <add>drawArc(...): arc drawing.</add>
              <add>drawCurve(...): Bezier curve drawing.</add>
              <add>drawEllipse(RectangularShape): ellipse drawing.</add>
              <add>drawLine(...): line drawing.</add>
              <add>drawPolygon(Point2D[]): polygon drawing.</add>
              <add>drawPolyline(Point2D[]): multiple line drawing.</add>
              <add>drawRectangle(RectangularShape,double): rounded rectangle drawing.</add>
              <add>drawSpiral(Point2D,double,double,double,double): spiral drawing.</add>
              <add>rotate(double,Point2D): translated rotation.</add>
              <add>showText(...,Action): link drawing.</add>
              <change>showText(...): returns text bounding box vertices. Furthermore, showText(String) text location has been harmonized to the top-left coordinate system origin (it used the bottom-left native PDF origin).</change>
            </entries>
          </change>
          <fix id="1909704">Namespace collision resolved (see ColorSpaceResources, FontResources, XObjectResources). Symptom: case-insensitive programming languages experienced namespace collision. Cause: some classes (ColorSpaces, Fonts, XObjects) had names equivalent to subnamespaces (colorSpaces, fonts, xObjects).</fix>
          <remove>class ColorSpaces: substituted by ColorSpaceResources.</remove>
          <remove>class Fonts: substituted by FontResources.</remove>
          <remove>class XObjects: substituted by XObjectResources.</remove>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.documents.interaction">
        <entries>
          <add>class actions.Action</add>
          <add>class actions.ChainedActions</add>
          <add>class actions.DoTransition</add>
          <add>class actions.GoTo3dView</add>
          <add>class actions.GoToEmbedded</add>
          <add>class actions.GoToFirstPage</add>
          <add>class actions.GoToLastPage</add>
          <add>class actions.GoToLocal</add>
          <add>class actions.GoToNextPage</add>
          <add>class actions.GoToPreviousPage</add>
          <add>class actions.GoToRemote</add>
          <add>class actions.GoToThread</add>
          <add>class actions.GoToURI</add>
          <add>class actions.ImportData</add>
          <add>class actions.JavaScript</add>
          <add>class actions.Launch</add>
          <add>class actions.NamedAction</add>
          <add>class actions.PlayMovie</add>
          <add>class actions.PlaySound</add>
          <add>class actions.Rendition</add>
          <add>class actions.ResetForm</add>
          <add>class actions.SetOCGState</add>
          <add>class actions.SubmitForm</add>
          <add>class actions.ToggleVisibility</add>
          <add>class annotations.Annotation</add>
          <add>class annotations.AnnotationActions</add>
          <add>class annotations.Appearance</add>
          <add>class annotations.AppearanceCharacteristics</add>
          <add>class annotations.AppearanceStates</add>
          <add>class annotations.Border</add>
          <add>class annotations.CalloutNote</add>
          <add>class annotations.Caret</add>
          <add>class annotations.DualWidget</add>
          <add>class annotations.Ellipse</add>
          <add>class annotations.FileAttachment</add>
          <add>class annotations.Line</add>
          <add>class annotations.Link</add>
          <add>class annotations.MovieAnnotation</add>
          <add>class annotations.Note</add>
          <add>class annotations.Polygon</add>
          <add>class annotations.Polyline</add>
          <add>class annotations.Popup</add>
          <add>class annotations.Rectangle</add>
          <add>class annotations.RubberStamp</add>
          <add>class annotations.Scribble</add>
          <add>class annotations.Shape</add>
          <add>class annotations.SoundAnnotation</add>
          <add>class annotations.TextMarkup</add>
          <add>class annotations.VertexShape</add>
          <add>class annotations.WidgetActions</add>
          <add>class annotations.Widget</add>
          <add>class forms.ButtonField</add>
          <add>class forms.CheckBox</add>
          <add>class forms.ChoiceField</add>
          <add>class forms.ChoiceItem</add>
          <add>class forms.ChoiceItems</add>
          <add>class forms.ComboBox</add>
          <add>class forms.Field</add>
          <add>class forms.FieldActions</add>
          <add>class forms.Fields</add>
          <add>class forms.FieldWidgets</add>
          <add>class forms.Form</add>
          <add>class forms.ListBox</add>
          <add>class forms.PushButton</add>
          <add>class forms.RadioButton</add>
          <add>class forms.SignatureField</add>
          <add>class forms.TextField</add>
          <add>class forms.styles.DefaultStyle</add>
          <add>class forms.styles.FieldStyle</add>
          <add>class navigation.document.Destination</add>
          <add>class navigation.document.LocalDestination</add>
          <add>class navigation.document.RemoteDestination</add>
          <add>class navigation.page.Transition</add>
          <add>class viewer.ViewerPreferences</add>
          <remove>class Destination: substituted by navigation.document.Destination</remove>
          <remove>class Destinations: substituted by it.stefanochizzolini.clown.documents.NamedDestinations</remove>
          <remove>class DestinationModeEnum: substituted by navigation.document.Destination.ModeEnum</remove>
          <remove>class ViewerPreferences: substituted by viewer.ViewerPreferences</remove>
        </entries>
      </feature>
    </release>
    <release version="0.0.6" date="2008-05-01" compatible="false">
      <description>
        <db:para>This release is focused upon <db:emphasis role="strong">Unicode support</db:emphasis>, at both content-stream level (i.e. page text) and document level (i.e. metadata text); it particularly implies the explicit encoding support by font objects and the reimplementation of the string object model to ensure a robust treatment of encoding matters.</db:para>
        <db:para>Other relevant enhancements involve content composition (enriched by the introduction of <db:emphasis role="strong">barcode support</db:emphasis>, paragraph-level horizontal alignment, etc.) and <db:emphasis role="strong">page management</db:emphasis> (facilitated by the introduction of a specialized tool).</db:para>
      </description>
      <feature idref="it.stefanochizzolini.clown.objects">
        <entries>
          <add>class PdfString: base string object, both literal and hexadecimal.</add>
          <add>class PdfTextString: specialized string (derived from PdfString) for metadata text, both ASCII and Unicode.</add>
          <change><text><![CDATA[class PdfAtomicObject<T>:]]></text>
            <entries>
              <add>get/setRawValue(T): low-level representation of the data.</add>
              <add>get/setValue(Object): high-level representation of the data.</add>
              <remove>get/setValue(T): substituted by get/setValue(Object).</remove>
            </entries>
          </change>
          <change>class PdfDate: extends PdfString</change>
          <change><text>class PdfDirectObject:</text>
            <entries>
              <remove>toPdf(): converged to writeTo(IOutputStream).</remove>
            </entries>
          </change>
          <change><text>class PdfStream</text>
            <entries>
              <fix id="1909707:AH">writeTo(IOutputStream): end-of-line markers are now correct. Symptom: validation failure. Cause: invalid end-of-line marker for stream objects.</fix>
              <fix id="0.0.5:1:SC">getBody(boolean): stream filter chains are now treated correctly. Symptom: stream objects encoded with multiple filters fail to be accessed. Cause: failure dealing with filter chains.</fix>
            </entries>
          </change>
          <remove>interface IPdfString: substituted by PdfString as base string object.</remove>
          <remove>class PdfHex: substituted by PdfString (hexadecimal mode).</remove>
          <remove>class PdfLiteral: substituted by PdfString (content stream text in literal mode) and PdfTextString (metadata text).</remove>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.documents.contents">
        <entries>
          <add>class entities.Barcode: base barcode object.</add>
          <add>class entities.EAN13Barcode: EAN13 barcode object.</add>
          <change><text>class ContentScanner</text>
            <entries>
              <remove>class TextState: incorporated within GraphicsState</remove>
            </entries>
          </change>
          <change><text>interface IContentEntity</text>
            <entries>
              <add>toInlineObject(PrimitiveFilter): renders and shows the entity into the given inline context.</add>
              <remove>toInlineObject(IContentContext): substituted by toInlineObject(PrimitiveFilter).</remove>
            </entries>
          </change>
          <change><text>class composition.BlockFilter</text>
            <entries>
              <add>showBreak(AlignmentXEnum), showBreak(Dimension2D,AlignmentXEnum): horizontal alignment at paragraph level.</add>
            </entries>
          </change>
          <change><text>class composition.PrimitiveFilter</text>
            <entries>
              <change>showText(...): explicit text encoding support added.</change>
            </entries>
          </change>
          <change><text>class fonts.Font</text>
            <entries>
              <add>encode(String)/decode(byte[]): text encoding/decoding.</add>
            </entries>
          </change>
          <change>class fonts.OpenTypeFont: Type0/Unicode support added.</change>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.tools">
        <entries>
          <add>class PageManager: exposes common page operations (insertion, removal, movement...).</add>
        </entries>
      </feature>
    </release>
    <release version="0.0.5" date="2007-12-12" compatible="false">
      <description>
        <db:para>This release is focused upon consolidating and simplifying the functionalities introduced in the previous release. Particularly, <db:emphasis role="strong">content reuse and composition</db:emphasis> have been further improved -- for example: page conversion into reusable forms, automation of boiler-plate activities such as resources management, a new ready-to-use tool for easy content stamping and watermarking...</db:para>
      </description>
      <feature idref="it.stefanochizzolini.clown.tokens">
        <entries>
          <change><text>class Parser</text>
            <entries>
              <fix id="0.0.4:1">retrieveXRefOffset(long): the smallest PDF files are now supported. Symptom: the smallest PDF files fail to be loaded. Cause: less-than-1024-byte-long PDF files caused the pointer to fall outside the available data range.</fix>
              <fix id="0.0.4:4">moveNext(): hexadecimal strings are now parsed correctly. Symptom: the hexadecimal content lacks its first character. Cause: the parsing algorithm skipped after the first character, inadvertently overlooking it.</fix>
            </entries>
          </change>
          <change><text>class Writer</text>
            <entries>
              <fix id="0.0.4:5">writeStandard(): files with original multiple-section cross-reference tables are now handled correctly. Symptom: opening the modified file with a viewer such as Adobe Reader, a "Repair" dialog box is shown to notify the malformation. Cause: existing "Prev" entry inside the trailer dictionary was not handled for deletion despite the xref table had been consolidated into a single section.</fix>
            </entries>
          </change>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.documents">
        <entries>
          <change><text>class Page</text>: implements IContentEntity</change>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.documents.contents">
        <entries>
          <add>interface IContentEntity: grants convertion of a generic content source to PDF content. This abstraction greatly improves the versatility of content manipulation, allowing seamless transformation and reuse of contents.</add>
          <change><text>class ContentScanner</text>
            <entries>
              <add>moveFirst(),moveLast()</add>
            </entries>
          </change>
          <change>interface IContentContext: extends IContentEntity.</change>
          <change><text>class composition.PrimitiveFilter</text>
            <entries>
              <add>add(ContentObject): substitutes add(Operation) for generalization purposes.</add>
              <change>showText(...): signature change.</change>
              <change>showXObject(...): signature change and reimplementation.</change>
              <remove>add(Operation): redefined as add(ContentObject).</remove>
            </entries>
          </change>
          <change>class entities.Entity: implements IContentEntity.</change>
          <change><text>class objects.InlineImage</text>
            <entries>
              <fix id="0.0.4:3">writeTo(IBuffer): serialization is now valid. Symptom: inline image objects were corrupted. Cause: serialization syntax was corrupted by a missing new-line symbol.</fix>
            </entries>
          </change>
          <change><text>class objects.InlineImageHeader</text>
            <entries>
              <fix id="0.0.4:2"><![CDATA[constructor(List<PdfDirectObject>)]]>: instantiation is now successful. Symptom: inline image objects failed to instantiate properly. Cause: operation operator was erroneously set to null.</fix>
            </entries>
          </change>
          <change>class xObjects.FormXObject: implements IContentEntity.</change>
          <change><text>class xObjects.XObject</text>
            <entries>
              <add>getMatrix(): support to coordinate transformation from object space to user space.</add>
            </entries>
          </change>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.tools">
        <entries>
          <add>class PageStamper: greatly simplifies content insertion on the background and foreground of existing pages.</add>
        </entries>
      </feature>
    </release>
    <release version="0.0.4" date="2007-09-15" compatible="false">
      <description>
        <db:para>This release implements the <db:emphasis role="strong">2nd (and final) level of the content stream stack</db:emphasis> (graphics object level [PDF:1.6:4.1], i.e. operations aggregation within corresponding compound objects like text, path, shading etc.).</db:para>
        <db:para>Although this portion is architecturally complete, the content stream model is still partial as it implements only the main content objects (over 40 new classes, distributed among operations and composite objects like Text, InlineImage and so on): remaining content objects will be progressively implemented in the next releases.</db:para>
        <db:para>NOTE: the 1st level of the content stream stack (operation level [PDF:1.6:3.7.1], i.e. operands aggregation within corresponding atomic objects known as operations) is available since version 0.0.2.</db:para>
      </description>
      <feature idref="it.stefanochizzolini.clown.objects">
        <entries>
          <add>class PdfNameTree [PDF:1.6:3.8.5]</add>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.files">
        <entries>
          <change><text>class File</text>
            <entries>
              <add>File(String): shortcut for opening an existing file with a specified file-system path instead of bothering about streams.</add>
              <add>register(PdfDataObject): shortcut for registering internal data objects into the indirect objects collection.</add>
              <add>writeTo(string,SerializationModeEnum): shortcut for saving the file to a specified file-system path instead of bothering about streams.</add>
            </entries>
          </change>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.documents">
        <entries>
          <add>class Names [PDF:1.6:3.6.3]</add>
          <change><text>class Document</text>
            <entries>
              <add>getNames(),setNames(Names): support to the name dictionary [PDF:1.6:3.6.3].</add>
              <add>getPageSize(),setPageSize(Dimension2D): default page size.</add>
              <add>getSize(): document overall size.</add>
              <remove>getPageWidth(),setPageWidth(double),getPageHeight(),setPageHeight(double): redundant (see getPageSize()).</remove>
            </entries>
          </change>
          <change><text>class Page</text>
            <entries>
              <add>getInheritableAttribute(PdfName): support to inheritable attributes.</add>
              <add>getSize(),setSize(Dimension2D): page size.</add>
              <change>constructors: enhanced initialization.</change>
              <remove>getWidth(),setWidth(double),getHeight(),setHeight(double): redundant (see getSize()).</remove>
            </entries>
          </change>
          <change><text>class PageFormat</text>
            <entries>
              <add>ANSI series [ANSI/ASME Y14.1]</add>
              <add>Architectural series</add>
            </entries>
          </change>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.documents.interaction">
        <entries>
          <add>class Destinations [PDF:1.6:8.2.1]</add>
          <change><text>class navigation.document.Bookmark</text>
            <entries>
              <change>getDestination(): support to named destinations [PDF:1.6:8.2.1].</change>
            </entries>
          </change>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.documents.contents">
        <entries>
          <add>class Contents: content stream representation as a list of content objects.</add>
          <add>class ContentScanner: graphics state scanner of a list of content objects (see Contents class).</add>
          <add>interface IContentContext: former IContentStreamContext.</add>
          <add>class LineDash</add>
          <add>class composition.PrimitiveFilter</add>
          <add>class objects.BeginInlineImage</add>
          <add>class objects.BeginText</add>
          <add>class objects.CompositeObject</add>
          <add>class objects.ContainerObject</add>
          <add>class objects.ContentObject: root object from which both operations and graphics objects derive.</add>
          <add>class objects.DrawRectangle</add>
          <add>class objects.EndInlineImage</add>
          <add>class objects.EndText</add>
          <add>class objects.Fill</add>
          <add>class objects.GraphicsObject</add>
          <add>class objects.InlineImage</add>
          <add>class objects.InlineImageBody</add>
          <add>class objects.InlineImageHeader</add>
          <add>class objects.LocalGraphicsState</add>
          <add>class objects.ModifyCTM</add>
          <add>class objects.PaintShadingObject</add>
          <add>class objects.PaintXObject</add>
          <add>class objects.RestoreGraphicsState</add>
          <add>class objects.SaveGraphicsState</add>
          <add>class objects.SetCharSpace</add>
          <add>class objects.SetFillColor</add>
          <add>class objects.SetFillColorSpace</add>
          <add>class objects.SetFont</add>
          <add>class objects.SetLineCap</add>
          <add>class objects.SetLineDash</add>
          <add>class objects.SetLineJoin</add>
          <add>class objects.SetLineWidth</add>
          <add>class objects.SetMiterLimit</add>
          <add>class objects.SetStrokeColor</add>
          <add>class objects.SetStrokeColorSpace</add>
          <add>class objects.SetTextLead</add>
          <add>class objects.SetTextMatrix</add>
          <add>class objects.SetTextRenderMode</add>
          <add>class objects.SetTextRise</add>
          <add>class objects.SetTextScale</add>
          <add>class objects.SetWordSpace</add>
          <add>class objects.ShadingObject</add>
          <add>class objects.ShowText</add>
          <add>class objects.Stroke</add>
          <add>class objects.Text</add>
          <add>class objects.TranslateTextRelative</add>
          <add>class objects.TranslateTextToNextLine</add>
          <add>class objects.XObject</add>
          <change><text>class colorSpaces.Color</text>
            <entries>
              <add>getColorSpace()</add>
              <add>getComponents()</add>
            </entries>
          </change>
          <change><text>class colorSpaces.ColorSpace</text>
            <entries>
              <add>getColor(PdfDirectObject[])</add>
              <add>getDefaultColor()</add>
            </entries>
          </change>
          <change><text>class composition.BlockFilter</text>
            <entries>
              <change>showText(String): line break character management implemented.</change>
            </entries>
          </change>
          <change><text>class entities.Entity</text>
            <entries>
              <add>createInlineObject(): substitutes showInline(ContentBuilder).</add>
              <remove>showInline(ContentBuilder): substituted by createInlineObject().</remove>
            </entries>
          </change>
          <change><text>class entities.Image</text>
            <entries>
              <add>get(String): shortcut for getting an image from a specified file-system path instead of bothering about streams.</add>
            </entries>
          </change>
          <change><text>class fonts.OpenTypeFont</text>
            <entries>
              <add>OpenTypeFont(Document,String): shortcut for getting an OpenType font from a specified file-system path instead of bothering about streams.</add>
            </entries>
          </change>
          <change><text>class objects.Operation</text>
            <entries>
              <add><![CDATA[get(String,List<PdfDirectObject>): factory method for operations.]]></add>
              <change>extends objects.ContentObject.</change>
            </entries>
          </change>
          <change><text>class tokens.Parser</text>
            <entries>
              <add>parseContentObject(),parseContentObjects(): 2nd level parsing (operations aggregation into graphics objects)</add>
            </entries>
          </change>
          <change><text>class xObjects.FormXObject</text>
            <entries>
              <add>getSize(),setSize(Dimension2D): form size.</add>
              <remove>getWidth(),setWidth(double),getHeight(),setHeight(double): substituted by getSize(),setSize(Dimension2D).</remove>
            </entries>
          </change>
          <remove>class ContentStream,ContentStreams: substituted by Contents.</remove>
          <remove>interface IContentStreamContext: substituted by IContentContext.</remove>
          <remove>class composition.ContentBuilder: substituted by composition.PrimitiveFilter.</remove>
        </entries>
      </feature>
    </release>
    <release version="0.0.3" date="2007-05-05" compatible="false">
      <description>
        <db:para>This release introduces comprehensive <db:emphasis role="strong">font management</db:emphasis> (OpenType/TrueType and Standard Type 1 font collection) and positional typesetting facilities.</db:para>
      </description>
      <feature idref="it.stefanochizzolini.clown:ANY">
        <entries>
          <change>Project subnamespaces have been reorganized to harmonize with the abstract design.</change>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.bytes">
        <entries>
          <change><text>interface IInputStream</text>
            <entries>
              <add>readLine()</add>
              <add>readShort()</add>
              <add>readUnsignedByte()</add>
              <add>readUnsignedShort()</add>
            </entries>
          </change>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.objects">
        <entries>
          <change><text>class PdfLiteral</text>
            <entries>
              <add>static String toPdf(String): escape characters management.</add>
            </entries>
          </change>
          <change><text>class PdfName</text>
            <entries>
              <add>void setValue(String): escape characters management.</add>
              <add>String toString(): escape characters management.</add>
            </entries>
          </change>
          <change><text>class PdfStream</text>
            <entries>
              <add>IBuffer getBody(boolean): decoding option.</add>
            </entries>
          </change>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.documents.contents">
        <entries>
          <add>class PageFormat</add>
          <add>class composition.BlockFilter</add>
          <add>class fonts.OpenTypeFont</add>
          <add>class fonts.Type1Font</add>
          <change><text>class composition.ContentBuilder</text>
            <entries>
              <add>graphics state stack management.</add>
              <add>public void showText(...): text alignment management.</add>
              <fix>drawRectangle(RectangularShape): vertical origin is adjusted to canvas orientation. Symptom: rectangles aren't shown at the intended vertical location. Cause: vertical origin was interpreted as raw position (i.e. without adjustment).</fix>
              <fix>translateTextRelative(double,double): vertical offset is adjusted to canvas orientation. Symptom: text vertical translation is opposite to the intended. Cause: vertical offset was interpreted as raw translation (i.e. without adjustment).</fix>
            </entries>
          </change>
          <change><text>class entities.Entity</text>
            <entries>
              <change>showInline(ContentBuilder): was showInline(ContentStream)</change>
            </entries>
          </change>
          <change><text>class entities.Image</text>
            <entries>
              <add>static Image get(IInputStream)</add>
            </entries>
          </change>
          <change><text>class fonts.Font</text>
            <entries>
              <add>enum FlagsEnum</add>
              <add>static double getScalingFactor(double)</add>
              <add>double getAscent(double), double getDescent(double)</add>
              <add>EnumSet getFlags()</add>
              <add>double getKernedWidth(String,double)</add>
              <add>abstract int getKerning(char,char), abstract int getKerning(String), double getKerning(String,double)</add>
              <add>double getLineHeight(double)</add>
              <add>abstract int getWidth(char), abstract int getWidth(String), double getWidth(String,double)</add>
              <change>static Font wrap(PdfReference): refined font instantiation</change>
            </entries>
          </change>
          <change><text>class fonts.StandardType1Font: extends fonts.Type1Font (was fonts.Font)</text>
            <entries>
              <change><text>enum FamilyNameEnum</text>
                <entries>
                  <add>Symbol</add>
                  <add>ZapfDingbats</add>
                </entries>
              </change>
            </entries>
          </change>
          <remove>class PageFormatEnum: it was too limiting (replaced with PageFormat class)</remove>
        </entries>
      </feature>
    </release>
    <release version="0.0.2" date="2006-12-19" compatible="false">
      <description>
        <db:para>The main objective of this release is to enable <db:emphasis role="strong">serialization and deserialization of PdfStream objects</db:emphasis> and consequently to allow parsing and editing of content streams. In order to reach this result it introduces stream filters (encoding/decoding), optimized byte streaming interfaces, enhanced indirect object management and minor bug fixes, along with the usual pervasive revision of the entire codebase.</db:para>
      </description>
      <feature idref="it.stefanochizzolini.clown.byteStreaming">
        <entries>
          <change><text>Buffer</text>
            <entries>
              <add>Buffer(byte[] data)</add>
              <change>delete(), get*(), replace()</change>
              <remove>hashCode(): default inherited implementation suffices</remove>
            </entries>
          </change>
          <change><text>IBuffer</text>
            <entries>
              <add>void decode(Filter filter): support to stream decoding</add>
              <add>byte[] encode(Filter filter): support to stream encoding</add>
              <add>void insert(int index,IInputStream data)</add>
              <add>void replace(int index,IInputStream data)</add>
              <change>inherits from IInputStream: was ISequence</change>
              <change>void append(IInputStream data): was void append(ISequence data)</change>
              <change>int getByte(int): was byte getByte(int)</change>
              <remove>append(char)</remove>
              <remove>getByteArray(int)</remove>
            </entries>
          </change>
          <change><text>IInputStream</text>
            <entries>
              <add>ISequence members</add>
              <remove>readChar()</remove>
              <remove>readLine()</remove>
            </entries>
          </change>
          <change><text>IOutputStream</text>
            <entries>
              <add>write(IInputStream)</add>
            </entries>
          </change>
          <remove>ISequence</remove>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.serialization">
        <entries>
          <add><text>Filters (serialization.filters namespace)</text>
            <entries>
              <add>Filter abstract class</add>
              <add>FlateFilter class</add>
            </entries>
          </add>
          <change><text>Parser</text>
            <entries>
              <add>getStream()</add>
              <change>retrieveXRefOffset(): chunkSize = 1024 (it was 256).</change>
              <fix>moveNext(): PdfName hexadecimally-coded characters are now left unchanged for consistency reasons (unescaped string can be retrieved using PdfName.toString() method). Symptom: corrupted serialization of PDF files containing "#20" (or whatever else) escaped character in PdfName objects. Cause: during deserialization parsing, PdfName objects were unescaped, without escaping them back on the following serialization (corrupted PdfName objects).</fix>
              <fix>parsePdfObject(): current pointer position is saved anytime the method calls external objects. Symptom: PdfStream corrupted body. Cause: File.resolve(dictionary.get(PdfName.Length) caused parsing stream to unexpectedly shift its current position to an undefined location.</fix>
              <fix>parsePdfObject(): now only the PdfReference object is instantiated instead of its PdfIndirectObject counterpart. Symptom: phantom PdfIndirectObject state modifications. Cause: in case of late update, PdfIndirectObject objects didn't work consistently because in the meantime they could be instantiated multiple times, forking the same indirect object into independent, redundant states.</fix>
              <remove>read*(): they were redundant and out-of-context (too low-level)</remove>
            </entries>
          </change>
          <change><text>Reader</text>
            <entries>
              <change>readTrailer()</change>
            </entries>
          </change>
          <change>TokenTypeEnum.Unknown: renamed to Keyword (more informative)</change>
          <change><text>Writer</text>
            <entries>
              <add>writeStandard(): arbitrary binary characters (code >= 128) for ensuring proper behavior of file transfer applications.</add>
              <change>writeIncremental(): free xref entries optimization</change>
            </entries>
          </change>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.objects">
        <entries>
          <change><text>PdfDirectObject</text>
            <entries>
              <add>toPdf()</add>
            </entries>
          </change>
          <change><text>PdfAtomicObject</text>
            <entries>
              <remove>toPdf(): transferred to an ancestor (PdfDirectObject) for generalization</remove>
            </entries>
          </change>
          <change>PdfNull: unique static object</change>
          <change><text>PdfStream</text>
            <entries>
              <change>getBody(), writeTo(stream): transparent filtering introduced</change>
              <remove>setBody(), setHeader(): might violate object integrity</remove>
            </entries>
          </change>
          <change>PdfReference: reimplementation (extensive refactoring)</change>
          <change>PdfIndirectObject: reimplementation (extensive refactoring)</change>
          <change><text>IPdfIndirectObject</text>
            <entries>
              <add>delete(), clone(file)</add>
            </entries>
          </change>
          <change><text>PdfObjectWrapper</text>
            <entries>
              <add>delete()</add>
              <change>getDocument(), getFile(): simplification</change>
            </entries>
          </change>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.fileStructure">
        <entries>
          <change><text>IndirectObjects: reimplementation (extensive refactoring)</text>
            <entries>
              <add>update(object)</add>
              <add>wokenObjects: for original indirect objects not yet updated (avoids duplications on parsing)</add>
              <change>add(index,object), addAll(index,collection), clear(): UnsupportedOperationException</change>
              <change>get(index)</change>
              <change>set(index,object): UnsupportedOperationException (updates must be managed directly by PdfIndirectObject.update())</change>
              <impl>remove(index)</impl>
              <remove>getDataObject(): transferred to PdfIndirectObject</remove>
            </entries>
          </change>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.documentStructure">
        <entries>
          <change><text>Document</text>
            <entries>
              <add>contextualize(), contextualize(collection): contextualization helper methods</add>
              <add>decontextualize(), decontextualize(collection): decontextualization helper methods</add>
            </entries>
          </change>
          <change><text>Pages</text>
            <entries>
              <impl>add(index,page), addAll(index,pages), addAll(pages)</impl>
              <impl>remove(index), remove(page), removeAll(pages)</impl>
            </entries>
          </change>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.contentStreaming">
        <entries>
          <add>contentStreaming.operations.Operation: encapsulate content stream instructions</add>
          <add>contentStreaming.serialization.Parser: parses content streams</add>
          <add>ContentBuilder: encapsulates most of ContentStream members (those related to content stream building)</add>
          <change><text>ContentStream</text>
            <entries>
              <add>getParser(): see contentStreaming.serialization.Parser</add>
              <remove>members related to content stream building are transferred to ContentBuilder</remove>
            </entries>
          </change>
          <change><text>JpegImage</text>
            <entries>
              <change>createXObject(): see ImageXObject</change>
            </entries>
          </change>
          <change><text>XObject, ImageXObject</text>
            <entries>
              <add>constructor(Document context,PdfStream baseDataObject)</add>
              <change>constructor(Document context)</change>
            </entries>
          </change>
        </entries>
      </feature>
    </release>
    <release version="0.0.1" date="2006-11-21" compatible="false">
      <feature idref="it.stefanochizzolini.clown.byteStreaming">
        <entries>
          <add><text>Interfaces:</text>
            <entries>
              <add>basic sequencing (ISequence)</add>
              <add>buffering (IBuffer : ISequence)</add>
              <add><text>streaming:</text>
                <entries>
                  <add>input streaming (IInputStream : ISequence)</add>
                  <add>output streaming (IOutputStream)</add>
                </entries>
              </add>
            </entries>
          </add>
          <add><text>Concrete classes:</text>
            <entries>
              <add>buffering (Buffer : IBuffer)</add>
              <add>streaming (Stream : IInputStream, IOutputStream)</add>
            </entries>
          </add>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.objects">
        <entries>
          <add>null object (PdfNull)</add>
          <add>long integer object (PdfLong)</add>
          <add>indirect object interface (IPdfIndirectObject)</add>
          <change>real object (PdfReal): from float- to double-typed value</change>
          <change>wrapper object (PdfObjectWrapper): containment simplification and minor enhancements</change>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.contentStreaming">
        <entries>
          <add>Partial support to device-independent color spaces (colorSpaces.CIEBasedColorSpace and descendants, colorSpaces.ICCBasedColorSpace)</add>
          <add>factory methods (Wrap())</add>
          <change>Color spaces reimplementation (colorSpaces.DeviceColorSpace and descendants)</change>
          <change>Content stream interface improvements</change>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown:ANY">
        <entries>
          <add>Integrity enforcements</add>
          <change>float-typed values to double-typed</change>
        </entries>
      </feature>
    </release>
    <release version="0.0.0" date="2006-09-17" compatible="true">
      <feature idref="it.stefanochizzolini.clown.serialization">
        <entries>
          <add><text>Input management (Reader):</text>
            <entries>
              <add>Token parsing (Parser)</add>
              <add>PDF object parsing (Parser)</add>
              <add><text>File structure retrieval (Reader):</text>
                <entries>
                  <add>File version</add>
                  <add>Trailer dictionary</add>
                  <add>Cross-reference table</add>
                </entries>
              </add>
            </entries>
          </add>
          <add><text>Output management (Writer):</text>
            <entries>
              <add>Compact (standard) serialization</add>
              <add>Incremental update</add>
            </entries>
          </add>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.objects">
        <entries>
          <add><text>Abstract types:</text>
            <entries>
              <add><text>object-level ancestors:</text>
                <entries>
                  <add>root type (PdfObject)</add>
                  <add>data type (PdfDataObject)</add>
                  <add>direct data type (PdfDirectObject)</add>
                  <add>atomic type (PdfAtomicObject)</add>
                </entries>
              </add>
              <add><text>file-level ancestors:</text>
                <entries>
                  <add>indirect type (PdfIndirectObject)</add>
                </entries>
              </add>
              <add><text>document-level ancestors:</text>
                <entries>
                  <add>universal object wrapper (PdfObjectWrapper)</add>
                </entries>
              </add>
            </entries>
          </add>
          <add>Interfaces (IPdfAtomicObject, IPdfNumber, IPdfString).</add>
          <add><text>Concrete types:</text>
            <entries>
              <add><text>atomic types (implementing IPdfAtomicObject):</text>
                <entries>
                  <add>boolean values (PdfBoolean)</add>
                  <add><text>numbers (implementing IPdfNumber):</text>
                    <entries>
                      <add>integer numbers (PdfInteger)</add>
                      <add>real numbers (PdfReal)</add>
                    </entries>
                  </add>
                  <add><text>strings (implementing IPdfString):</text>
                    <entries>
                      <add>hexadecimal strings (PdfHex)</add>
                      <add>literal strings (PdfLiteral)</add>
                      <add>dates (PdfDate)</add>
                    </entries>
                  </add>
                  <add>names (PdfName)</add>
                </entries>
              </add>
              <add><text>composite types:</text>
                <entries>
                  <add>arrays (PdfArray)</add>
                  <add>dictionaries (PdfDictionary)</add>
                  <add>streams (PdfStream)</add>
                  <add>indirect references (PdfReference)</add>
                </entries>
              </add>
              <add><text>helper types (semantic extensions):</text>
                <entries>
                  <add>rectangles (PdfRectangle)</add>
                </entries>
              </add>
            </entries>
          </add>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.fileStructure">
        <entries>
          <add>File object (File)</add>
          <add>Indirect objects collection (IndirectObjects)</add>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.documentStructure">
        <entries>
          <add>Document object (Document)</add>
          <add>Page object (Page)</add>
          <add>Page objects collection (Pages)</add>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.interchange">
        <entries>
          <add>Metadata dictionary (metadata.Information)</add>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.interaction">
        <entries>
          <add>Bookmarks (Destination, navigation.documentLevel.Bookmark, navigation.documentLevel.Bookmarks)</add>
          <add>Viewer preferences (ViewerPreferences)</add>
        </entries>
      </feature>
      <feature idref="it.stefanochizzolini.clown.contentStreaming">
        <entries>
          <add>Content stream object (ContentStream)</add>
          <add>Content stream objects collection (ContentStreams)</add>
          <add>Resources object (Resources)</add>
          <add>XObject object (xObjects.XObject) and descendants</add>
          <add>XObject objects collection (XObjects)</add>
          <add>Font object (fonts.Font) and descendants</add>
          <add>Font objects collection (Fonts)</add>
          <add>Device color space object (colorSpaces.DeviceColor) and descendants</add>
          <add>Entity object (entities.Entity) and descendants</add>
        </entries>
      </feature>
    </release>
  </entries>
</changeLog>
